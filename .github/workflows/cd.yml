name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted # This job runs on your Kali VM
    steps:
      - uses: actions/checkout@v3

      # Python / Flask setup steps here...
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.7'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Build Docker image
      # Note: The 'build' job already runs on the self-hosted runner.
      # If you intend to *push* to Docker Hub from here and *pull* in deploy,
      # then this is correct. If you just want to build and run locally on the VM,
      # you might simplify. But pushing to a registry is good practice.
      - name: Build Docker image
        run: docker build -t devops-app .

      # Docker Hub login & push
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag devops-app ${{ secrets.DOCKER_USERNAME }}/devops-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/devops-app:latest

  deploy:
    runs-on: self-hosted # <--- CRITICAL CHANGE: This job also runs on your Kali VM
    needs: build         # Ensures the build job completes successfully first
    steps:
      - name: Checkout code (optional for deploy, but good for context)
        uses: actions/checkout@v3

      # No need for SSH Agent if it's deploying to itself
      # - name: Setup SSH Agent
      #   uses: webfactory/ssh-agent@v0.9.0
      #   with:
      #     ssh-private-key: ${{ secrets.VM_SSH_KEY }}

      - name: Log in to Docker Hub (again, to pull the image)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy Docker container
        run: |
          # The self-hosted runner is already on the Kali VM, so run commands directly
          docker pull ${{ secrets.DOCKER_USERNAME }}/devops-app:latest
          docker stop devops-app || true # Stop if exists, don't fail if not
          docker rm devops-app || true   # Remove if exists, don't fail if not
          docker run -d -p 5001:5001 --name devops-app ${{ secrets.DOCKER_USERNAME }}/devops-app:latest